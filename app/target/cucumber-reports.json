[{"line":2,"elements":[{"start_timestamp":"2023-01-16T04:53:00.765Z","line":10,"name":"As a user, i can send a Get Request and receive a list of user","description":"","id":";as-a-user--i-can-send-a-get-request-and-receive-a-list-of-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":328076200,"status":"passed"},"line":7,"name":"I can send a request for the https://reqres.in/","match":{"arguments":[{"val":"https://reqres.in/","offset":29}],"location":"apiautomation.steps.RegresAPIuserSteps.sendReqGetUri(java.lang.String)"},"keyword":"Given "},{"result":{"duration":773112500,"status":"passed"},"line":11,"name":"I send a GET request to the endpoint /api/users?page=2","match":{"arguments":[{"val":"/api/users?page=2","offset":37}],"location":"apiautomation.steps.RegresAPIuserSteps.sendReqGetUSerList(java.lang.String)"},"keyword":"When "},{"result":{"duration":433098200,"status":"passed"},"line":12,"name":"I can validate that the user George is on the list and status 200","match":{"arguments":[{"val":"George","offset":29},{"val":"200","offset":62}],"location":"apiautomation.steps.RegresAPIuserSteps.validateRespGet(java.lang.String,int)"},"keyword":"Then "}],"tags":[{"name":"@testUsersOnRegresAPI"},{"name":"@ListUser"}]},{"start_timestamp":"2023-01-16T04:53:02.395Z","line":15,"name":"As a user, i can send an invalid get request with a non-existent page and not receive user information","description":"","id":";as-a-user--i-can-send-an-invalid-get-request-with-a-non-existent-page-and-not-receive-user-information","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":2001200,"status":"passed"},"line":7,"name":"I can send a request for the https://reqres.in/","match":{"arguments":[{"val":"https://reqres.in/","offset":29}],"location":"apiautomation.steps.RegresAPIuserSteps.sendReqGetUri(java.lang.String)"},"keyword":"Given "},{"result":{"duration":270717600,"status":"passed"},"line":16,"name":"I send a GET request with invalid page parameter to the endpoint /api/users?page=245646","match":{"arguments":[{"val":"/api/users?page=245646","offset":65}],"location":"apiautomation.steps.RegresAPIuserSteps.sendReqGetUSerListInvalid(java.lang.String)"},"keyword":"When "},{"result":{"duration":10002200,"status":"passed"},"line":17,"name":"I can validate that the data does not exist by sending an invalid page","match":{"location":"apiautomation.steps.RegresAPIuserSteps.validateInvalidPage()"},"keyword":"Then "}],"tags":[{"name":"@testUsersOnRegresAPI"},{"name":"@ListUserInvalidPage"}]},{"start_timestamp":"2023-01-16T04:53:02.681Z","line":21,"name":"As a user, i can send a Get Request and receive a specific user","description":"","id":";as-a-user--i-can-send-a-get-request-and-receive-a-specific-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":997700,"status":"passed"},"line":7,"name":"I can send a request for the https://reqres.in/","match":{"arguments":[{"val":"https://reqres.in/","offset":29}],"location":"apiautomation.steps.RegresAPIuserSteps.sendReqGetUri(java.lang.String)"},"keyword":"Given "},{"result":{"duration":200779600,"status":"passed"},"line":22,"name":"I send a GET request to get a specific user /api/users/2","match":{"arguments":[{"val":"/api/users/2","offset":44}],"location":"apiautomation.steps.RegresAPIuserSteps.getSpecificUser(java.lang.String)"},"keyword":"When "},{"result":{"duration":9001000,"status":"passed"},"line":23,"name":"I can validate the Fisrt name Janet specified in the response and status code 200","match":{"arguments":[{"val":"Janet","offset":30},{"val":"200","offset":78}],"location":"apiautomation.steps.RegresAPIuserSteps.validateSpecificUser(java.lang.String,int)"},"keyword":"Then "}],"tags":[{"name":"@testUsersOnRegresAPI"},{"name":"@SigleUser"}]},{"start_timestamp":"2023-01-16T04:53:02.893Z","line":26,"name":"As a user, i can send a Invalid user Get Request and obtain status code 404","description":"","id":";as-a-user--i-can-send-a-invalid-user-get-request-and-obtain-status-code-404","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":7,"name":"I can send a request for the https://reqres.in/","match":{"arguments":[{"val":"https://reqres.in/","offset":29}],"location":"apiautomation.steps.RegresAPIuserSteps.sendReqGetUri(java.lang.String)"},"keyword":"Given "},{"result":{"duration":541835100,"status":"passed"},"line":27,"name":"I send a GET request with a non-existent user /api/users/8593","match":{"arguments":[{"val":"/api/users/8593","offset":46}],"location":"apiautomation.steps.RegresAPIuserSteps.getSpecificUserInvalid(java.lang.String)"},"keyword":"When "},{"result":{"duration":1000000,"status":"passed"},"line":28,"name":"I can validate that no information is obtained status code 404","match":{"arguments":[{"val":"404","offset":59}],"location":"apiautomation.steps.RegresAPIuserSteps.validateSigleUserStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@testUsersOnRegresAPI"},{"name":"@SigleUserInvalid"}]},{"start_timestamp":"2023-01-16T04:53:03.439Z","line":31,"name":"As a user, i can send a Get Request and receive a Resource list","description":"","id":";as-a-user--i-can-send-a-get-request-and-receive-a-resource-list","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1000200,"status":"passed"},"line":7,"name":"I can send a request for the https://reqres.in/","match":{"arguments":[{"val":"https://reqres.in/","offset":29}],"location":"apiautomation.steps.RegresAPIuserSteps.sendReqGetUri(java.lang.String)"},"keyword":"Given "},{"result":{"duration":230849400,"status":"passed"},"line":32,"name":"I send a request to get the list of Resources /api/unknown","match":{"arguments":[{"val":"/api/unknown","offset":46}],"location":"apiautomation.steps.RegresAPIuserSteps.getResourceList(java.lang.String)"},"keyword":"When "},{"result":{"duration":10004400,"status":"passed"},"line":33,"name":"I can validate the list of 6 resources received in the response and status code 200","match":{"arguments":[{"val":"6","offset":27},{"val":"200","offset":80}],"location":"apiautomation.steps.RegresAPIuserSteps.validateCantResources(int,int)"},"keyword":"Then "}],"tags":[{"name":"@testUsersOnRegresAPI"},{"name":"@ListResource"}]},{"start_timestamp":"2023-01-16T04:53:03.683Z","line":37,"name":"As a user, I can send a Post request to create a new user","description":"","id":";as-a-user--i-can-send-a-post-request-to-create-a-new-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1000000,"status":"passed"},"line":7,"name":"I can send a request for the https://reqres.in/","match":{"arguments":[{"val":"https://reqres.in/","offset":29}],"location":"apiautomation.steps.RegresAPIuserSteps.sendReqGetUri(java.lang.String)"},"keyword":"Given "},{"result":{"duration":567764800,"status":"passed"},"line":38,"name":"I send a POST request to create user with a valid body: CreateUserPay to the endpoint /api/users","match":{"arguments":[{"val":"CreateUserPay","offset":56},{"val":"/api/users","offset":86}],"location":"apiautomation.steps.RegresAPIuserSteps.createUserPost(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":7001500,"status":"passed"},"line":39,"name":"I can validate that the created user Roberto Carlos exists in the response and status code 201","match":{"arguments":[{"val":"Roberto Carlos","offset":37},{"val":"201","offset":91}],"location":"apiautomation.steps.RegresAPIuserSteps.validateUserCreated(java.lang.String,int)"},"keyword":"Then "}],"tags":[{"name":"@testUsersOnRegresAPI"},{"name":"@CreateUser"}]},{"start_timestamp":"2023-01-16T04:53:04.261Z","line":43,"name":"As a user, I can send a Put request to update a name user","description":"","id":";as-a-user--i-can-send-a-put-request-to-update-a-name-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1000500,"status":"passed"},"line":7,"name":"I can send a request for the https://reqres.in/","match":{"arguments":[{"val":"https://reqres.in/","offset":29}],"location":"apiautomation.steps.RegresAPIuserSteps.sendReqGetUri(java.lang.String)"},"keyword":"Given "},{"result":{"duration":503103400,"status":"passed"},"line":44,"name":"I send a PUT request with the body: UpdNameUserPay to update the username to the endpoint /api/users/2","match":{"arguments":[{"val":"UpdNameUserPay","offset":36},{"val":"/api/users/2","offset":90}],"location":"apiautomation.steps.RegresAPIuserSteps.updateUserPut(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":8002200,"status":"passed"},"line":45,"name":"I can validate that the name change was made to Arturo Alarcon and the status code 200","match":{"arguments":[{"val":"Arturo Alarcon","offset":48},{"val":"200","offset":83}],"location":"apiautomation.steps.RegresAPIuserSteps.validateUpdateUser(java.lang.String,int)"},"keyword":"Then "}],"tags":[{"name":"@testUsersOnRegresAPI"},{"name":"@UpdateUserPut"}]},{"start_timestamp":"2023-01-16T04:53:04.775Z","line":49,"name":"As a user, I can send a Put request to update a Job user","description":"","id":";as-a-user--i-can-send-a-put-request-to-update-a-job-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":7,"name":"I can send a request for the https://reqres.in/","match":{"arguments":[{"val":"https://reqres.in/","offset":29}],"location":"apiautomation.steps.RegresAPIuserSteps.sendReqGetUri(java.lang.String)"},"keyword":"Given "},{"result":{"duration":530521900,"status":"passed"},"line":50,"name":"I send a PATCH request with the body: UpdJobUserPay to update the username to the endpoint /api/users/2","match":{"arguments":[{"val":"UpdJobUserPay","offset":38},{"val":"/api/users/2","offset":91}],"location":"apiautomation.steps.RegresAPIuserSteps.updateUserJobPatch(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":7007600,"status":"passed"},"line":51,"name":"I can validate that the job change was made to QA Engineer and the status code 200","match":{"arguments":[{"val":"QA Engineer","offset":47},{"val":"200","offset":79}],"location":"apiautomation.steps.RegresAPIuserSteps.validateUpdateJobUser(java.lang.String,int)"},"keyword":"Then "}],"tags":[{"name":"@testUsersOnRegresAPI"},{"name":"@UpdateUserPatch"}]},{"start_timestamp":"2023-01-16T04:53:05.316Z","line":54,"name":"As a user, I can send a Delete request to erase user","description":"","id":";as-a-user--i-can-send-a-delete-request-to-erase-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1000300,"status":"passed"},"line":7,"name":"I can send a request for the https://reqres.in/","match":{"arguments":[{"val":"https://reqres.in/","offset":29}],"location":"apiautomation.steps.RegresAPIuserSteps.sendReqGetUri(java.lang.String)"},"keyword":"Given "},{"result":{"duration":525514600,"status":"passed"},"line":55,"name":"I send a DELETE request to the endpoint /api/users/2","match":{"arguments":[{"val":"/api/users/2","offset":40}],"location":"apiautomation.steps.RegresAPIuserSteps.sendDeleteUSer(java.lang.String)"},"keyword":"When "},{"result":{"duration":999700,"status":"passed"},"line":56,"name":"I can validate that the user was correctly removed from the list and status code 204","match":{"arguments":[{"val":"204","offset":81}],"location":"apiautomation.steps.RegresAPIuserSteps.validateDeleteStatusCode(int)"},"keyword":"Then "}],"tags":[{"name":"@testUsersOnRegresAPI"},{"name":"@DeleteUser"}]},{"start_timestamp":"2023-01-16T04:53:05.844Z","line":60,"name":"As a user, i can send a Post request to successfully register the user","description":"","id":";as-a-user--i-can-send-a-post-request-to-successfully-register-the-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1000500,"status":"passed"},"line":7,"name":"I can send a request for the https://reqres.in/","match":{"arguments":[{"val":"https://reqres.in/","offset":29}],"location":"apiautomation.steps.RegresAPIuserSteps.sendReqGetUri(java.lang.String)"},"keyword":"Given "},{"result":{"duration":502378200,"status":"passed"},"line":61,"name":"I send a POST request with a valid body RegisterUserPay to register to the endpoint /api/register","match":{"arguments":[{"val":"RegisterUserPay","offset":40},{"val":"/api/register","offset":84}],"location":"apiautomation.steps.RegresAPIuserSteps.reqToRegister(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":7001000,"status":"passed"},"line":62,"name":"I can validate that the user registered successfully and status code 200","match":{"arguments":[{"val":"200","offset":69}],"location":"apiautomation.steps.RegresAPIuserSteps.validateRegister(int)"},"keyword":"Then "}],"tags":[{"name":"@testUsersOnRegresAPI"},{"name":"@RegisterSuccessful"}]},{"start_timestamp":"2023-01-16T04:53:06.355Z","line":66,"name":"As a user, i can send a invalid Post request to register the user","description":"","id":";as-a-user--i-can-send-a-invalid-post-request-to-register-the-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1000400,"status":"passed"},"line":7,"name":"I can send a request for the https://reqres.in/","match":{"arguments":[{"val":"https://reqres.in/","offset":29}],"location":"apiautomation.steps.RegresAPIuserSteps.sendReqGetUri(java.lang.String)"},"keyword":"Given "},{"result":{"duration":530396100,"status":"passed"},"line":67,"name":"I send a POST request to register user with an invalid password InvalidRegisterUserPay body /api/register","match":{"arguments":[{"val":"InvalidRegisterUserPay","offset":64},{"val":"/api/register","offset":92}],"location":"apiautomation.steps.RegresAPIuserSteps.reqToInvalidRegister(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":6001600,"status":"passed"},"line":68,"name":"I can validate that the error message and status code 400","match":{"arguments":[{"val":"400","offset":54}],"location":"apiautomation.steps.RegresAPIuserSteps.validateInvalidRegister(int)"},"keyword":"Then "}],"tags":[{"name":"@testUsersOnRegresAPI"},{"name":"@RegisterUnsuccessful"}]},{"start_timestamp":"2023-01-16T04:53:06.899Z","line":72,"name":"As a user, I can send a Post request to login successfully","description":"","id":";as-a-user--i-can-send-a-post-request-to-login-successfully","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1000900,"status":"passed"},"line":7,"name":"I can send a request for the https://reqres.in/","match":{"arguments":[{"val":"https://reqres.in/","offset":29}],"location":"apiautomation.steps.RegresAPIuserSteps.sendReqGetUri(java.lang.String)"},"keyword":"Given "},{"result":{"duration":503509900,"status":"passed"},"line":73,"name":"I send a POST request with a valid body LoginSucessFulPay for login /api/login","match":{"arguments":[{"val":"LoginSucessFulPay","offset":40},{"val":"/api/login","offset":68}],"location":"apiautomation.steps.RegresAPIuserSteps.reqToLogin(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":7001500,"status":"passed"},"line":74,"name":"I can validate that login is allowed successfully and status code 200","match":{"arguments":[{"val":"200","offset":66}],"location":"apiautomation.steps.RegresAPIuserSteps.validateLogin(int)"},"keyword":"Then "}],"tags":[{"name":"@testUsersOnRegresAPI"},{"name":"@LoginSuccessful"}]},{"start_timestamp":"2023-01-16T04:53:07.412Z","line":77,"name":"As a user, I can send a Invalid Post request to login","description":"","id":";as-a-user--i-can-send-a-invalid-post-request-to-login","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":999900,"status":"passed"},"line":7,"name":"I can send a request for the https://reqres.in/","match":{"arguments":[{"val":"https://reqres.in/","offset":29}],"location":"apiautomation.steps.RegresAPIuserSteps.sendReqGetUri(java.lang.String)"},"keyword":"Given "},{"result":{"duration":538131400,"status":"passed"},"line":78,"name":"I send a POST request to login with an invalid body InvalidLoginPay to the endpoint /api/login","match":{"arguments":[{"val":"InvalidLoginPay","offset":52},{"val":"/api/login","offset":84}],"location":"apiautomation.steps.RegresAPIuserSteps.reqToInvalidLogin(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":7001200,"status":"passed"},"line":79,"name":"I can validate that the missing password error message and the status code 400","match":{"arguments":[{"val":"400","offset":75}],"location":"apiautomation.steps.RegresAPIuserSteps.validateInvalidLogin(int)"},"keyword":"Then "}],"tags":[{"name":"@testUsersOnRegresAPI"},{"name":"@LoginUnsuccessful"}]}],"name":"test scenarios for the API: https://reqres.in/","description":"","id":"test-scenarios-for-the-api:-https://reqres.in/","keyword":"Feature","uri":"file:src/test/resources/features/RegresUserApi.feature","tags":[{"name":"@testUsersOnRegresAPI","type":"Tag","location":{"line":1,"column":1}}]}]